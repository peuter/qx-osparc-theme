{
  "className": "qx.core.Id",
  "packageName": "qx.core",
  "name": "Id",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 196,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2017 Zenesis Limited, http://www.zenesis.com\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nJohn Spackman (john.spackman@zenesis.com, @johnspackman)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Provides a registry of top level objects"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": false,
  "members": {
    "__registeredObjects": {
      "location": {
        "start": {
          "line": 28,
          "column": 4
        },
        "end": {
          "line": 28,
          "column": 29
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__registeredIdHashes": {
      "location": {
        "start": {
          "line": 29,
          "column": 4
        },
        "end": {
          "line": 29,
          "column": 30
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_createQxObject": {
      "location": {
        "start": {
          "line": 34,
          "column": 4
        },
        "end": {
          "line": 38,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} ID of the object",
            "paramName": "id",
            "description": " ID of the object",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.core.Object?} the created object",
            "type": "qx.core.Object?",
            "description": " the created object"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MObjectId"
      ]
    },
    "_createQxObjectImpl": {
      "location": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} ID of the object",
            "paramName": "id",
            "description": " ID of the object",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.core.Object?} the created object",
            "type": "qx.core.Object?",
            "description": " the created object"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.core.Object",
      "appearsIn": [
        "qx.core.Object",
        "qx.core.MObjectId"
      ]
    },
    "getAbsoluteIdOf": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 115,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns an object path which can be used to locate an object anywhere in the application\nwith a call to `qx.core.Id.getQxObject()`.\n\nThis will return null if it is not possible to calculate a path because one of the\nancestors has a null `qxObjectId`.\n\nThis will also return null if the top-most ancestor is not one of the globals registered\nwith `registerObject` or a known global (such as the application); however, by passing\n`true` as the `suppressWarnings` parameter, this will prevent errors from appearing in\nthe console when this happens"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.core.Object} the object",
            "paramName": "obj",
            "description": " the object",
            "type": "qx.core.Object"
          },
          {
            "name": "@param",
            "body": "suppressWarnings {Boolean?} default: false; silently returns null if an ID cannot be created",
            "paramName": "suppressWarnings",
            "description": " default: false; silently returns null if an ID cannot be created",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} full path to the object",
            "type": "String",
            "description": " full path to the object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "register": {
      "location": {
        "start": {
          "line": 126,
          "column": 4
        },
        "end": {
          "line": 137,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Registers an object with an ID; as this is registering a global object which is the root of a tree\nof objects with IDs, the `id` parameter can be provided to set the ID used for the root object - this\nallows an object to be registered under a well known, common name without affecting the API of the\nobject."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.core.Object} the object to register",
            "paramName": "obj",
            "description": " the object to register",
            "type": "qx.core.Object"
          },
          {
            "name": "@param",
            "body": "id {String?} the ID to register the object under, otherwise the object's own Object Id is used",
            "paramName": "id",
            "description": " the ID to register the object under, otherwise the object's own Object Id is used",
            "optional": true,
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "unregister": {
      "location": {
        "start": {
          "line": 145,
          "column": 4
        },
        "end": {
          "line": 170,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Unregisters a previously registered object with an ID"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {Object|String} the object to unregister, or the ID of the object",
            "paramName": "data",
            "description": " the object to unregister, or the ID of the object",
            "type": [
              "Object",
              "String"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether there was an object to unregister",
            "type": "Boolean",
            "description": " whether there was an object to unregister"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "statics": {
    "getQxObject": {
      "location": {
        "start": {
          "line": 181,
          "column": 4
        },
        "end": {
          "line": 183,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns a top level instance"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} the ID to look for",
            "paramName": "id",
            "description": " the ID to look for",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.core.Object?} the object",
            "type": "qx.core.Object?",
            "description": " the object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAbsoluteIdOf": {
      "location": {
        "start": {
          "line": 192,
          "column": 4
        },
        "end": {
          "line": 194,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper for `qx.core.Id.getAbsoluteIdOf`"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.core.Object} the object",
            "paramName": "obj",
            "description": " the object",
            "type": "qx.core.Object"
          },
          {
            "name": "@param",
            "body": "suppressWarnings {Boolean?} default: false; silently returns null if an ID cannot be created",
            "paramName": "suppressWarnings",
            "description": " default: false; silently returns null if an ID cannot be created",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} full path to the object",
            "type": "String",
            "description": " full path to the object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}